/**
 *
 * @author Ashif
 */

import java.io.*;
import java.net.*;
import java.util.*;


public class UDPClient {

    public static void main(String[] args) throws Exception {

		String host = "localhost";
		int port = 24567;
                String name="UDPClient";

		System.out.println("Connecting to " + host + ":" + port + " ...");
		Socket socket = new Socket(host, port);
		System.out.println("Connected to " + socket.getRemoteSocketAddress());


                DataInputStream inputStream= new DataInputStream(socket.getInputStream());
                DataOutputStream outputStream= new DataOutputStream(socket.getOutputStream());

                try {
				String message = inputStream.readUTF();
				System.out.println(message);
			} catch (Exception ex) {
				System.out.println("Inside receiver of UDPClient.java: " + ex);
			}

                try {
                                Scanner scanner=new Scanner(System.in);
                                String message = scanner.nextLine();
				outputStream.writeUTF("[" + name + "] " + message);

                                if(message.equalsIgnoreCase("ack")){
                                    new Receiver(24567).receive();
                                    System.out.println("recieving from server");
                                }
                                    
                                
			} catch (Exception ex) {
				System.out.println("Inside sender of " + name + ": " + ex);
			}

	}
}


class Receiver {

	int port;

	public Receiver(int _port) throws Exception {
		System.out.println("Initializing receiver.");
		port = _port;
	}

	void receive() throws Exception {
		// 1KB size buffer to receive file.
		byte[] data = new byte[1024];
		// Output stream to write to file (not yet created).
		FileOutputStream outStream = null;
		// UDP socket and packet to receive file.
		DatagramSocket socket = new DatagramSocket(port);
		DatagramPacket packet = new DatagramPacket(data, data.length);

		int pktCount = 0;
		boolean flag = true;	// To check the first packet
		while(true) {
			socket.receive(packet);

			// The first packet contains file name.
			if(flag) {
				// Retrieve the file name from the packet.
				String fileName = new String(data, 0, packet.getLength());
				System.out.println("Creating file.");
				// Create a file using the received file name.
				outStream = new FileOutputStream(fileName);
				flag = false;
			}
			/* The later packets are part of the original file
			 * except the last one which contains the finishing
			 * signature.
			 */
			else {
				String signature = new String(data, 0, 6);
				// If signature is found, file has been received.
				if(signature.equals("!DONE!")) break;

				// Append the received packet to the file.
				System.out.println("Writing packet " + (++pktCount));
				outStream.write(data, 0, packet.getLength());
			}
		}

		outStream.close();
		socket.close();

		System.out.println("File received.");
	}
}
